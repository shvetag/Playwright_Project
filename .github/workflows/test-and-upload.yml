name: Run Tests and Upload Results to Xray

on:
  workflow_dispatch:  # Allows manual triggering from GitHub Actions UI

jobs:
  test-and-report:
    runs-on: windows-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18

    - name: Install Dependencies
      run: npm install
      shell: bash

    - name: Install Playwright Browsers
      run: npx playwright install
      shell: bash 

    - name: Run Tests
      run: npm run test:regression
      shell: bash

    - name: Upload Test Results to Xray
      shell: pwsh
      run: |
        # Authenticate with Xray and get token
        $clientId = "${{ secrets.XRAY_CLIENT_ID }}"
        $clientSecret = "${{ secrets.XRAY_CLIENT_SECRET }}"
        $authUrl = "https://xray.cloud.getxray.app/api/v2/authenticate"
        $authBody = @{ client_id = $clientId; client_secret = $clientSecret } | ConvertTo-Json
        $authResponse = Invoke-RestMethod -Uri $authUrl -Method Post -Body $authBody -ContentType "application/json"
        
        # Log the response to debug
        Write-Host "Authentication Response: $($authResponse | ConvertTo-Json -Depth 5)"
        
        # Check if the token exists in the response
        if ($authResponse.token) {
          $TOKEN = $authResponse.token
        } else {
          Write-Host "Authentication failed. Response: $($authResponse | ConvertTo-Json -Depth 5)"
          exit 1
        }

        # Define the Test Execution Key and Test Results
        $TEST_EXECUTION_KEY = "NEW_KEY"  # Optionally, use an existing Test Execution Key
        $TEST_RESULTS = @{
            testExecutionKey = $TEST_EXECUTION_KEY
            tests = @(
                @{
                    testKey = "TEST-1"
                    status = "PASS"
                }
            )
        } | ConvertTo-Json

        # Upload the test execution result to Xray
        $xrayUrl = "https://xray.cloud.getxray.app/api/v2/import/execution/cucumber"
        Invoke-RestMethod -Uri $xrayUrl -Method Post -Body $TEST_RESULTS -Headers @{ Authorization = "Bearer $TOKEN" } -ContentType "application/json"
